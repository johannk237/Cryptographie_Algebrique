/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.fixit.cryptographie;

/**
 *
 * @author JOHANN
 */
public class Cryptographie extends javax.swing.JFrame {

    /**
     * Creates new form Cryptage
     */
    public Cryptographie() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        cesar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texte_cesar = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        crypt_cesar = new javax.swing.JTextArea();
        cle_cesar = new javax.swing.JTextField();
        valide_cesar = new javax.swing.JButton();
        error_cesar = new javax.swing.JLabel();
        affine = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        texte_affine = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        crypt_affine = new javax.swing.JTextArea();
        valide_affine = new javax.swing.JButton();
        error_affine = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cle_affine_b = new javax.swing.JTextField();
        cle_affine_a = new javax.swing.JTextField();
        vegenere = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        texte_vegenere = new javax.swing.JTextArea();
        cle_vegenere = new javax.swing.JTextField();
        valide_vegenere = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        crypt_vegenere = new javax.swing.JTextArea();
        error_vegenere = new javax.swing.JLabel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        cesar1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        texte_cesar1 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        crypt_cesar1 = new javax.swing.JTextArea();
        cle_cesar1 = new javax.swing.JTextField();
        valide_cesar1 = new javax.swing.JButton();
        error_cesar1 = new javax.swing.JLabel();
        affine1 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        texte_affine1 = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        crypt_affine1 = new javax.swing.JTextArea();
        valide_affine1 = new javax.swing.JButton();
        error_affine1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cle_affine_b1 = new javax.swing.JTextField();
        cle_affine_a1 = new javax.swing.JTextField();
        vegenere1 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        texte_vegenere1 = new javax.swing.JTextArea();
        cle_vegenere1 = new javax.swing.JTextField();
        valide_vegenere1 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        crypt_vegenere1 = new javax.swing.JTextArea();
        error_vegenere1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cryptographie");
        setLocation(new java.awt.Point(0, 0));
        setPreferredSize(new java.awt.Dimension(480, 530));
        setResizable(false);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        texte_cesar.setColumns(20);
        texte_cesar.setRows(5);
        texte_cesar.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte"));
        jScrollPane1.setViewportView(texte_cesar);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        crypt_cesar.setEditable(false);
        crypt_cesar.setColumns(20);
        crypt_cesar.setRows(5);
        crypt_cesar.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte Crypté"));
        jScrollPane3.setViewportView(crypt_cesar);

        cle_cesar.setToolTipText("");
        cle_cesar.setBorder(javax.swing.BorderFactory.createTitledBorder("Clé  «entier»"));

        valide_cesar.setText("Valide");
        valide_cesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valide_cesarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cesarLayout = new javax.swing.GroupLayout(cesar);
        cesar.setLayout(cesarLayout);
        cesarLayout.setHorizontalGroup(
            cesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cesarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cle_cesar)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(cesarLayout.createSequentialGroup()
                        .addComponent(error_cesar, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valide_cesar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        cesarLayout.setVerticalGroup(
            cesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cesarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cle_cesar, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(cesarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valide_cesar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(error_cesar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("César", cesar);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        texte_affine.setColumns(20);
        texte_affine.setRows(5);
        texte_affine.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte"));
        jScrollPane2.setViewportView(texte_affine);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        crypt_affine.setEditable(false);
        crypt_affine.setColumns(20);
        crypt_affine.setRows(5);
        crypt_affine.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte Crypté"));
        jScrollPane4.setViewportView(crypt_affine);

        valide_affine.setText("Valide");
        valide_affine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valide_affineActionPerformed(evt);
            }
        });

        cle_affine_b.setToolTipText("");
        cle_affine_b.setBorder(javax.swing.BorderFactory.createTitledBorder("b «entier»"));

        cle_affine_a.setToolTipText("");
        cle_affine_a.setBorder(javax.swing.BorderFactory.createTitledBorder("a «entier»"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cle_affine_b, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(cle_affine_a, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(251, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cle_affine_b, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(cle_affine_a, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout affineLayout = new javax.swing.GroupLayout(affine);
        affine.setLayout(affineLayout);
        affineLayout.setHorizontalGroup(
            affineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(affineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(affineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, affineLayout.createSequentialGroup()
                        .addComponent(error_affine, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valide_affine, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        affineLayout.setVerticalGroup(
            affineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(affineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(affineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(error_affine, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valide_affine, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Affine", affine);

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        texte_vegenere.setColumns(20);
        texte_vegenere.setRows(5);
        texte_vegenere.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte"));
        jScrollPane7.setViewportView(texte_vegenere);

        cle_vegenere.setToolTipText("");
        cle_vegenere.setBorder(javax.swing.BorderFactory.createTitledBorder("Clé «mot ou phrase»"));

        valide_vegenere.setText("Valide");
        valide_vegenere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valide_vegenereActionPerformed(evt);
            }
        });

        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        crypt_vegenere.setEditable(false);
        crypt_vegenere.setColumns(20);
        crypt_vegenere.setRows(5);
        crypt_vegenere.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte Crypté"));
        jScrollPane8.setViewportView(crypt_vegenere);

        javax.swing.GroupLayout vegenereLayout = new javax.swing.GroupLayout(vegenere);
        vegenere.setLayout(vegenereLayout);
        vegenereLayout.setHorizontalGroup(
            vegenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vegenereLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vegenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addComponent(cle_vegenere, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegenereLayout.createSequentialGroup()
                        .addComponent(error_vegenere, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valide_vegenere, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        vegenereLayout.setVerticalGroup(
            vegenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vegenereLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cle_vegenere, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(vegenereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valide_vegenere, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(error_vegenere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Végénère", vegenere);

        jTabbedPane2.addTab("Cryptage", jTabbedPane1);

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        texte_cesar1.setColumns(20);
        texte_cesar1.setRows(5);
        texte_cesar1.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte"));
        jScrollPane5.setViewportView(texte_cesar1);

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        crypt_cesar1.setEditable(false);
        crypt_cesar1.setColumns(20);
        crypt_cesar1.setRows(5);
        crypt_cesar1.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte Crypté"));
        jScrollPane6.setViewportView(crypt_cesar1);

        cle_cesar1.setToolTipText("");
        cle_cesar1.setBorder(javax.swing.BorderFactory.createTitledBorder("Clé  «entier»"));

        valide_cesar1.setText("Valide");
        valide_cesar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valide_cesar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cesar1Layout = new javax.swing.GroupLayout(cesar1);
        cesar1.setLayout(cesar1Layout);
        cesar1Layout.setHorizontalGroup(
            cesar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cesar1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cesar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cle_cesar1)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(cesar1Layout.createSequentialGroup()
                        .addComponent(error_cesar1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valide_cesar1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );
        cesar1Layout.setVerticalGroup(
            cesar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cesar1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cle_cesar1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(cesar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valide_cesar1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(error_cesar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("César", cesar1);

        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        texte_affine1.setColumns(20);
        texte_affine1.setRows(5);
        texte_affine1.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte"));
        jScrollPane9.setViewportView(texte_affine1);

        jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        crypt_affine1.setEditable(false);
        crypt_affine1.setColumns(20);
        crypt_affine1.setRows(5);
        crypt_affine1.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte Crypté"));
        jScrollPane10.setViewportView(crypt_affine1);

        valide_affine1.setText("Valide");
        valide_affine1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valide_affine1ActionPerformed(evt);
            }
        });

        cle_affine_b1.setToolTipText("");
        cle_affine_b1.setBorder(javax.swing.BorderFactory.createTitledBorder("b «entier»"));

        cle_affine_a1.setToolTipText("");
        cle_affine_a1.setBorder(javax.swing.BorderFactory.createTitledBorder("a «entier»"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cle_affine_b1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(cle_affine_a1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(251, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cle_affine_b1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(cle_affine_a1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout affine1Layout = new javax.swing.GroupLayout(affine1);
        affine1.setLayout(affine1Layout);
        affine1Layout.setHorizontalGroup(
            affine1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(affine1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(affine1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, affine1Layout.createSequentialGroup()
                        .addComponent(error_affine1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valide_affine1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        affine1Layout.setVerticalGroup(
            affine1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(affine1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(affine1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(error_affine1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valide_affine1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Affine", affine1);

        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        texte_vegenere1.setColumns(20);
        texte_vegenere1.setRows(5);
        texte_vegenere1.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte"));
        jScrollPane11.setViewportView(texte_vegenere1);

        cle_vegenere1.setToolTipText("");
        cle_vegenere1.setBorder(javax.swing.BorderFactory.createTitledBorder("Clé «mot ou phrase»"));

        valide_vegenere1.setText("Valide");
        valide_vegenere1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valide_vegenere1ActionPerformed(evt);
            }
        });

        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        crypt_vegenere1.setEditable(false);
        crypt_vegenere1.setColumns(20);
        crypt_vegenere1.setRows(5);
        crypt_vegenere1.setBorder(javax.swing.BorderFactory.createTitledBorder("Texte Crypté"));
        jScrollPane12.setViewportView(crypt_vegenere1);

        javax.swing.GroupLayout vegenere1Layout = new javax.swing.GroupLayout(vegenere1);
        vegenere1.setLayout(vegenere1Layout);
        vegenere1Layout.setHorizontalGroup(
            vegenere1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vegenere1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vegenere1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12)
                    .addComponent(cle_vegenere1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vegenere1Layout.createSequentialGroup()
                        .addComponent(error_vegenere1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valide_vegenere1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        vegenere1Layout.setVerticalGroup(
            vegenere1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vegenere1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cle_vegenere1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(vegenere1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(valide_vegenere1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(error_vegenere1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Végénère", vegenere1);

        jTabbedPane2.addTab("Decryptage", jTabbedPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valide_cesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valide_cesarActionPerformed
        // TODO add your handling code here:
        try{
            texte = String.valueOf(texte_cesar.getText());
            cle = Integer.parseInt(String.valueOf(cle_cesar.getText()));
            chiffrement = chiffre_cesar(texte, cle);
            crypt_cesar.setText(chiffrement);
        }catch(Exception e){
            error_cesar.setText("Erreur dans certaines valeurs");
        }
        
    }//GEN-LAST:event_valide_cesarActionPerformed
    
    private void valide_affineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valide_affineActionPerformed
        // TODO add your handling code here:
        try{
            texte = String.valueOf(texte_affine.getText());
            a = Integer.parseInt(String.valueOf(cle_affine_a.getText()));
            b = Integer.parseInt(String.valueOf(cle_affine_b.getText()));
            chiffrement = chiffre_affine(texte, a, b);
            crypt_affine.setText(chiffrement);
        }catch(Exception e){
            error_affine.setText("Erreur dans certaines valeurs");
        }
    }//GEN-LAST:event_valide_affineActionPerformed

    private void valide_vegenereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valide_vegenereActionPerformed
        // TODO add your handling code here:
        try{
            texte = String.valueOf(texte_vegenere.getText());
            cles = String.valueOf(cle_vegenere.getText());
            if (texte.equals("") || cles.equals("")){
                error_vegenere.setText("Erreur dans certaines valeurs");
            }
            chiffrement = chiffre_vegenere(texte, cles);
            crypt_vegenere.setText(chiffrement);
        }catch(Exception e){
            error_vegenere.setText("Erreur dans certaines valeurs");
        }
        
    }//GEN-LAST:event_valide_vegenereActionPerformed

    private void valide_cesar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valide_cesar1ActionPerformed
        // TODO add your handling code here:
        try{
            texte = String.valueOf(texte_cesar1.getText());
            cle = Integer.parseInt(String.valueOf(cle_cesar1.getText()));
            chiffrement = dechiffre_cesar(texte, cle);
            crypt_cesar1.setText(chiffrement);
        }catch(Exception e){
            error_cesar1.setText("Erreur dans certaines valeurs");
        }
    }//GEN-LAST:event_valide_cesar1ActionPerformed

    private void valide_affine1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valide_affine1ActionPerformed
        // TODO add your handling code here:
        try{
            texte = String.valueOf(texte_affine1.getText());
            a = Integer.parseInt(String.valueOf(cle_affine_a1.getText()));
            b = Integer.parseInt(String.valueOf(cle_affine_b1.getText()));
            chiffrement = dechiffre_affine(texte, a, b);
            crypt_affine1.setText(chiffrement);
        }catch(Exception e){
            error_affine1.setText("Erreur dans certaines valeurs");
        }
    }//GEN-LAST:event_valide_affine1ActionPerformed

    private void valide_vegenere1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valide_vegenere1ActionPerformed
        // TODO add your handling code here:
        try{
            texte = String.valueOf(texte_vegenere1.getText());
            cles = String.valueOf(cle_vegenere1.getText());
            if (texte.equals("") || cles.equals("")){
                error_vegenere1.setText("Erreur dans certaines valeurs");
            }
            chiffrement = dechiffre_vegenere(texte, cles);
            crypt_vegenere1.setText(chiffrement);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_valide_vegenere1ActionPerformed

    private String chiffre_cesar(String texte, int cle){
        String resultat = "";
        for (int i = 0; i < texte.length(); i ++){
            char valeur = texte.toLowerCase().charAt(i);
            int entier = valeur;
            if (entier >= 97 && entier <= 122){
                valeur += (cle % 26); 
                if (valeur > 122){
                    valeur -= 26;
                }
            }
            resultat += valeur;
        }
        return resultat;
    }
    
    private String chiffre_affine(String texte, int a, int b){
        String resultat = "";
        for (int i = 0; i < texte.length(); i ++){
            char valeur = texte.toLowerCase().charAt(i);
            int entier = valeur;
            int un = (a * (entier - 97) + b) % 26;
            if (entier >= 97 && entier <= 122){
                valeur = 'a';
                valeur += un;
                if (valeur > 122){
                    valeur -= 26;
                }
            }
            resultat += valeur;
        }
        return resultat;
    }
    
    private String chiffre_vegenere(String texte, String cle){
        String resultat = "";
        for (int i = 0; i < texte.length(); i ++){
            int valeur_pas = i % cle.length();
            char pas = cle.charAt(valeur_pas);
            int pas_int = pas;
            pas_int %= 97;
            char valeur = texte.toLowerCase().charAt(i);
            int entier = valeur;
            if (entier >= 97 && entier <= 122){
                valeur += (pas_int % 26); 
                if (valeur > 122){
                    valeur -= 26;
                }
            }
            resultat += valeur;
        }
        return resultat;
    }
    
    private String dechiffre_cesar(String texte, int cle){
        String resultat = "";
        for (int i = 0; i < texte.length(); i ++){
            char valeur = texte.toLowerCase().charAt(i);
            int entier = valeur;
            if (entier >= 97 && entier <= 122){
                valeur -= (cle % 26);
                if (valeur < 97){
                    valeur += 26;
                }
            }
            resultat += valeur;
        }
        return resultat;
    }
    
    private String dechiffre_affine(String texte, int a, int b){
        String resultat = "";
        if (pgcd(a, 26) == 1){
            a = inverse(a, 26);
            for (int i = 0; i < texte.length(); i++){
                char valeur = texte.toLowerCase().charAt(i);
                int entier = valeur;
                int un = (a * (entier - 97 - b)) % 26;
                if (entier >= 97 && entier <= 122){
                    valeur = 'a';
                    valeur += un;
                    if (valeur < 97){
                    valeur += 26;
                }
                }
                resultat += valeur;
            }
        }else{
            error_affine1.setText(a +" n'est pas premier avec 26");
        }
        
        return resultat;
    }
    
    private String dechiffre_vegenere(String texte, String cle){
        String resultat = "";
        for (int i = 0; i < texte.length(); i ++){
            int valeur_pas = i % cle.length();
            char pas = cle.charAt(valeur_pas);
            int pas_int = pas;
            pas_int %= 97;
            char valeur = texte.toLowerCase().charAt(i);
            int entier = valeur;
            if (entier >= 97 && entier <= 122){
                valeur -= (pas_int % 26);
                if (valeur < 97){
                    valeur += 26;
                }
            }
            resultat += valeur;
        }
        return resultat;
    }
    
    private int inverse(int a, int p){
        int b = 0;
        for (int i = 0; i < 1000; i++){
            if ((a*i)%p == 1){
                b = i;
                break;
            }
        }
        return b;
    }
    
    private int pgcd(int a, int b){
        int c = b;
        if (a <b){
            b = a;
            a = c;
        }
        c = 1;
        while(c!=0){
            c = a%b;
            a = b;
            b = c;
        }
        return a;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cryptographie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Cryptographie().setVisible(true);
        });
    }
    String texte = "";
    int cle = 0;
    int a = 0;
    int b = 0;
    String cles = "";
    String chiffrement = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel affine;
    private javax.swing.JPanel affine1;
    private javax.swing.JPanel cesar;
    private javax.swing.JPanel cesar1;
    private javax.swing.JTextField cle_affine_a;
    private javax.swing.JTextField cle_affine_a1;
    private javax.swing.JTextField cle_affine_b;
    private javax.swing.JTextField cle_affine_b1;
    private javax.swing.JTextField cle_cesar;
    private javax.swing.JTextField cle_cesar1;
    private javax.swing.JTextField cle_vegenere;
    private javax.swing.JTextField cle_vegenere1;
    private javax.swing.JTextArea crypt_affine;
    private javax.swing.JTextArea crypt_affine1;
    private javax.swing.JTextArea crypt_cesar;
    private javax.swing.JTextArea crypt_cesar1;
    private javax.swing.JTextArea crypt_vegenere;
    private javax.swing.JTextArea crypt_vegenere1;
    private javax.swing.JLabel error_affine;
    private javax.swing.JLabel error_affine1;
    private javax.swing.JLabel error_cesar;
    private javax.swing.JLabel error_cesar1;
    private javax.swing.JLabel error_vegenere;
    private javax.swing.JLabel error_vegenere1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextArea texte_affine;
    private javax.swing.JTextArea texte_affine1;
    private javax.swing.JTextArea texte_cesar;
    private javax.swing.JTextArea texte_cesar1;
    private javax.swing.JTextArea texte_vegenere;
    private javax.swing.JTextArea texte_vegenere1;
    private javax.swing.JButton valide_affine;
    private javax.swing.JButton valide_affine1;
    private javax.swing.JButton valide_cesar;
    private javax.swing.JButton valide_cesar1;
    private javax.swing.JButton valide_vegenere;
    private javax.swing.JButton valide_vegenere1;
    private javax.swing.JPanel vegenere;
    private javax.swing.JPanel vegenere1;
    // End of variables declaration//GEN-END:variables
}
